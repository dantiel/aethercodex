<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>beforeRunningCommand</key><string>nop</string>
    <key>command</key>
    <string><![CDATA[#!/usr/bin/env bash
set -e
SUP="$TM_BUNDLE_SUPPORT"
SUP2=$(echo "file://$SUP/ui" | perl -pe 's/\//\\\//g')
export BUNDLE_GEMFILE="$SUP/Gemfile"
export GEM_HOME="$SUP/.vendor_bundle"
export GEM_PATH="$GEM_HOME"

# optional RVM
if [[ -s "$HOME/.rvm/scripts/rvm" ]]; then
  source "$HOME/.rvm/scripts/rvm"
  rvm use 3.1@aethercodex --create >/dev/null 2>&1 || true
fi

# Ensure server running & get port
JSON=$(bundle exec ruby "$SUP/boot.rb")
PORT=$(echo "$JSON" | ruby -rjson -e 'puts JSON.parse(STDIN.read)["port"]')

# Load chamber.html and inject the port dynamically with cache busting
HTML_OUT=$(cat "$SUP/ui/chamber.html" | sed "s/\$AETHER_PORT/$PORT/g" | sed "s/\$UIDIR/$(echo $SUP2)/g" | sed "s/\$RANDOM/$(uuidgen)/g")

printf "%s" "$HTML_OUT"
]]></string>
  <key>input</key><string>none</string>
  <key>inputFormat</key><string>text</string>
  <key>keyEquivalent</key><string>^~A</string>
  <key>name</key><string>AetherCodex: Commune</string>
  <key>outputFormat</key><string>html</string>
  <key>outputLocation</key><string>showAsHTML</string>
  <key>uuid</key><string>12345678-ABCD-1234-EFAB-1234567890AB</string>
  <key>version</key><integer>2</integer>
</dict>
</plist>
